{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAiB/C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,SAjBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOC,QAiBfA,MAAOX,O,QCvBVY,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAU,yCAAf,UACG,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCJFK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTN,EADS,iDACwCO,UAAUF,GADlD,+DAEIG,MAAMR,GAFV,cAETS,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAG1CiB,QAAQC,IAAIN,GAXG,kBAYRA,GAZQ,4CAAH,sDCCPO,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAK,GACLS,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WAENnB,EAAQC,GACHmB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAIvB,CAACf,IAEIgB,EDjBuBK,CAAarB,GAA/BU,EAFyB,EAE9BJ,KAAYS,EAFkB,EAElBA,QAEnB,OACI,qCACA,6BAAKf,IACJe,GAAW,mBAAGnB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYc,EAAOF,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEVxB6B,EAAe,WAAM,MAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAES6C,EAAWf,KAAI,SAACR,GAAD,OACR,cAAC,EAAD,CAEIA,SAAUA,GADJA,Y,MCbtCwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0d7e1239.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue,...cats]);\n            setinputValue('');\n        }\n       \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                onChange={handleInputChange}\n                value={inputValue}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n           <img src={url} alt={title}></img>\n           <p>{title}</p>\n        </div>\n    )\n}\n","\n\nexport const getGifs = async (category) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=I224dzgp0hKDl638KLdEKxDvancPFDdM`\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n        console.log(gifs);\n        return gifs;\n    }\n","import { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images,loading} = useFetchGifs(category)\n\n    return (\n        <>\n        <h3>{category}</h3>\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n        <div className=\"card-grid\">\n                {\n                    images.map((img) => ( \n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n        </div>\n        </>\n    )\n}\n","import {useState,useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    })\n\n    useEffect(()=>{\n\n        getGifs(category)\n            .then(imgs=>{\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            });\n\n    },[category]);\n\n    return state;\n}","import React, {useState} from 'react'\nimport {AddCategory} from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nexport const GifExpertApp = () => {\n    //const categories =['One Punch','Samurai X','Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <>\n            <h2>Gift Expert App</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            <ol>\n                { \n                    \tcategories.map((category)=>(\n                            <GifGrid\n                                key={ category }\n                                category={category}\n                            />\n                        ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}